{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/macbookpro/Desktop/rn-starter/src/screens/SquareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ColorCounter from \"../components/ColorCounter\";\nvar COLOR_INCREMENT = 15;\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'change_red':\n      return state.red + action.payload > 255 || state.red + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        red: state.red + action.payload\n      });\n\n    case 'change_green':\n      return state.green + action.payload > 255 || state.green + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        green: state.green + action.payload\n      });\n\n    case 'change_blue':\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0 ? state : _objectSpread(_objectSpread({}, state), {}, {\n        blue: state.blue + action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar SquareScreen = function SquareScreen() {\n  var _useReducer = useReducer(reducer, {\n    red: 0,\n    green: 0,\n    blue: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var red = state.red,\n      green = state.green,\n      blue = state.blue;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(ColorCounter, {\n    color: \"Red\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_red',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_red',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    value: red,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorCounter, {\n    color: \"Green\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_green',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_green',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    value: green,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(ColorCounter, {\n    color: \"Blue\",\n    onIncrease: function onIncrease() {\n      return dispatch({\n        type: 'change_blue',\n        payload: COLOR_INCREMENT\n      });\n    },\n    onDecrease: function onDecrease() {\n      return dispatch({\n        type: 'change_blue',\n        payload: -1 * COLOR_INCREMENT\n      });\n    },\n    value: blue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 150,\n      width: 150,\n      backgroundColor: \"rgb(\" + red + \",\" + green + \",\" + blue + \")\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SquareScreen;","map":{"version":3,"sources":["/Users/macbookpro/Desktop/rn-starter/src/screens/SquareScreen.js"],"names":["React","useReducer","ColorCounter","COLOR_INCREMENT","reducer","state","action","type","red","payload","green","blue","SquareScreen","dispatch","height","width","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport ColorCounter from '../components/ColorCounter';\n\nconst COLOR_INCREMENT = 15;\n\nconst reducer = (state, action) => {\n  // state === { red: number, green: number, blue: number };\n  // action === { type: 'change_red' || 'change_green' || 'change_blue', payload:  15 || -15 }\n\n  switch(action.type){\n    case 'change_red':\n      return state.red + action.payload > 255 || state.red + action.payload < 0\n        ? state : { ...state, red: state.red + action.payload };\n    case 'change_green':\n      return state.green + action.payload > 255 || state.green + action.payload < 0\n        ? state : { ...state, green: state.green + action.payload };\n    case 'change_blue':\n      return state.blue + action.payload > 255 || state.blue + action.payload < 0\n      ? state: { ...state, blue: state.blue + action.payload };\n    default:\n      return state;\n  }\n};\n\nconst SquareScreen = () => {\n\n  const [state, dispatch] = useReducer(reducer, { red: 0, green: 0, blue: 0 });\n  const { red, green, blue } = state;\n\n  return (\n    <View>\n      <ColorCounter\n        color=\"Red\"\n        onIncrease={() => dispatch({type: 'change_red', payload: COLOR_INCREMENT})}\n        onDecrease={() => dispatch({type: 'change_red', payload: -1 * COLOR_INCREMENT})}\n        value={red}\n      />\n\n      <ColorCounter\n        color=\"Green\"\n        onIncrease={() => dispatch({type: 'change_green', payload: COLOR_INCREMENT})}\n        onDecrease={() => dispatch({type: 'change_green', payload: -1 * COLOR_INCREMENT})}\n        value={green}\n      />\n\n      <ColorCounter\n        color=\"Blue\"\n        onIncrease={() => dispatch({type: 'change_blue', payload: COLOR_INCREMENT})}\n        onDecrease={() => dispatch({type: 'change_blue', payload: -1 * COLOR_INCREMENT})}\n        value={blue}\n      />\n      <View style={{ height:150, width:150, backgroundColor: `rgb(${red},${green},${blue})`}}></View>\n   </View>\n  )\n};\n\nexport default SquareScreen;\n"]},"metadata":{},"sourceType":"module"}